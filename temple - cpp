// Program to find minimum
// total offerings required
using System;

class GFG
{
	
// Returns minimum
// offerings required
static int offeringNumber(int n,
						int []templeHeight)
{
	int sum = 0; // Initialize result

	// Go through all
	// temples one by one
	for (int i = 0; i < n; ++i)
	{
		// Go to left while
		// height keeps increasing
		int left = 0, right = 0;
		for (int j = i - 1; j >= 0; --j)
		{
			if (templeHeight[j] <
				templeHeight[j + 1])
				++left;
			else
				break;
		}

		// Go to right while
		// height keeps increasing
		for (int j = i + 1; j < n; ++j)
		{
			if (templeHeight[j] <
				templeHeight[j - 1])
				++right;
			else
				break;
		}

		// This temple should offer
		// maximum of two values
		// to follow the rule.
		sum += Math.Max(right, left) + 1;
	}

	return sum;
}

// Driver code
static public void Main ()
{
	int []arr1 = {1, 2, 2};
	Console.WriteLine(offeringNumber(3, arr1));
	
	int []arr2 = {1, 4, 3,
				6, 2, 1};
	Console.WriteLine(offeringNumber(6, arr2));
}
}

